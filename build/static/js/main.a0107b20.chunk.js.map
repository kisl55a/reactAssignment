{"version":3,"sources":["components/Main.module.css","components/Marker.js","components/StationInfo.js","components/BriefStationInfo.js","components/Charging.js","components/MainPage.js","components/Login.js","components/Registration.js","components/HistoryRow.js","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Marker","props","type","toLowerCase","isTaken","className","styles","station","alt","src","stationTaken","StationInfo","stationInfo","infoHeader","stationName","address","power","price","measure","isLoggedIn","UUID","cancelButtonMainPage","onClick","setCurrentStationToNull","setCurrentStation","setStation","info","zebra","searchRes","searchResTaken","Charging","isCharging","chargingInfo","toUpperCase","currentCharge","cost","timeOfUsage","energy","stopCharging","onSubmit","event","preventDefault","startCharging","target","value","noChargerNotification","name","buttonGreen","MainPage","gridForMenu","post1","logo","message","to","buttonBlue","logout","id","post2","placeholder","onChange","onSearchFilterUpdate","currentMarker","resultArray","length","map","item","i","BriefStationInfo","key","post3","idCharging","Login","generalGrid","registration","login","history","goBack","cancelButton","proceedButton","Register","register","setMessageToNull","HistoryRow","timeOfStart","substr","Profile","userHistory","hidden","App","componentDidMount","axios","get","then","result","setState","Markers","data","arr","catch","error","console","username","password","idUser","auth","response","getUserHistory","err","log","email","post","textInputChange","state","filter","indexOf","currentStation","center","lat","lng","zoom","refreshData","setTimeout","frequency","_onChildClick","childProps","marker","forEach","e","text","showSearchResults","path","exact","render","routeProps","getInfoAboutStation","slice","this","bootstrapURLKeys","onChildClick","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.a0107b20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"Main_map__1DqFq\",\"mainInfo\":\"Main_mainInfo__s3kWr\",\"generalGrid\":\"Main_generalGrid__ZOTo4\",\"registration\":\"Main_registration__1jj0v\",\"gridForMenu\":\"Main_gridForMenu__6KhcC\",\"post-1\":\"Main_post-1__2iejo\",\"post-2\":\"Main_post-2__1SeaZ\",\"post-3\":\"Main_post-3__39SQs\",\"da\":\"Main_da__1VAqd\",\"searchRes\":\"Main_searchRes__1JWn6\",\"searchResTaken\":\"Main_searchResTaken__3DaEw\",\"station\":\"Main_station__j6RvN\",\"stationTaken\":\"Main_stationTaken__2z1Qv\",\"logo\":\"Main_logo__1-Fde\",\"buttonGreen\":\"Main_buttonGreen__1mql7\",\"buttonBlue\":\"Main_buttonBlue__dLHy8\",\"proceedButton\":\"Main_proceedButton__3U9zS\",\"cancelButton\":\"Main_cancelButton__3eQFc\",\"cancelButtonMainPage\":\"Main_cancelButtonMainPage__o1jlQ\",\"zebra\":\"Main_zebra__1VZQN\",\"infoHeader\":\"Main_infoHeader__3HSmt\",\"stationInfo\":\"Main_stationInfo__TvGLc\",\"property\":\"Main_property__3zqnU\",\"chargingInfo\":\"Main_chargingInfo__eA-f1\"};","import React from 'react';\r\n\r\nimport styles from './Main.module.css';\r\n\r\nexport default function Marker(props) {\r\n    return (\r\n        <div>\r\n            {/* {console.log(props)} */}\r\n            {\r\n                (props.type.toLowerCase() === \"fast\") ?\r\n                    (props.isTaken === 0 ? <img className={styles.station} alt=\"fastCharge\" src={'/images/Charging.png'}></img> :\r\n                        <img className={styles.stationTaken} alt=\"fastCharge\" src={`/images/Charging.png`}></img>\r\n                    )\r\n                    :\r\n                    (props.isTaken === 0 ? <img className={styles.station} alt=\"slowCharge\" src={`/images/slow.png`}></img> :\r\n                        <img className={styles.stationTaken} alt=\"slowCharge\" src={`/images/slow.png`}></img>)\r\n            }\r\n        </div>\r\n)}\r\n\r\n","import React from 'react';\r\nimport styles from './Main.module.css';\r\n\r\n// import { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\nconst StationInfo = (props) => {\r\n    function back() {\r\n        props.setCurrentStationToNull();\r\n    }\r\n    return (<div className={styles.stationInfo}>\r\n\r\n        <h4 className={styles.infoHeader}>\r\n            {props.stationName}\r\n        </h4>\r\n\r\n        <div>\r\n            Status: {(props.isTaken === 1) ? \"Taken\" : \" Free\"}\r\n        </div>\r\n        <div>\r\n            Address: {props.address}\r\n        </div>\r\n\r\n        <div>\r\n            Type: {props.type}\r\n        </div>\r\n        <div>\r\n            Power: {props.power} <sup>kWh</sup>\r\n        </div>\r\n        <div>\r\n            Price: {props.price}<sup>{props.measure}</sup>\r\n        </div>\r\n        {\r\n            (props.isLoggedIn) ?\r\n            <div>  Identifier: {props.UUID}</div> :\r\n            <div></div>\r\n        }\r\n        <div> <button className={styles.cancelButtonMainPage} onClick={back}> Back </button></div>\r\n    </div>)\r\n\r\n}\r\n\r\nexport default StationInfo;","import React from 'react';\r\nimport styles from './Main.module.css';\r\n\r\nconst StationInfo = (props) => {\r\n\r\n    function setCurrentStation() {\r\n        props.setStation(props.info)\r\n    }\r\n\r\n    if (props.info.isTaken !== 1) {\r\n        return (<div className={styles.zebra}>\r\n\r\n            <div className={styles.searchRes} onClick={setCurrentStation}>\r\n                {props.info.stationName}\r\n            </div>\r\n        </div>)\r\n    } else {\r\n        return (<div className={styles.zebra}>\r\n            \r\n            <div className={styles.searchResTaken} onClick={setCurrentStation}>\r\n                {props.info.stationName}\r\n            </div>\r\n        </div>)\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default StationInfo;","import React from 'react'\r\nimport styles from './Main.module.css';\r\n\r\nexport default function Charging(props) {\r\n  function startCharging(event) {\r\n    event.preventDefault();\r\n    props.startCharging(\r\n      event.target['identifier'].value,\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {(props.isCharging)\r\n        ?\r\n        <div className={styles.chargingInfo}>\r\n          <h5 className={styles.infoHeader}> Station UUID:\r\n         {props.UUID.toUpperCase()} </h5>\r\n          <div>The price:\r\n        {props.currentCharge.cost} <sup>EUR</sup> </div>\r\n          <div> Your time:\r\n        {props.currentCharge.timeOfUsage} <sup>min</sup> </div>\r\n          Your energy:\r\n        {props.currentCharge.energy} <sup>kWh</sup>\r\n          <br></br>\r\n          <button className={styles.cancelButtonMainPage} onClick={props.stopCharging}> Stop charging</button>\r\n        </div>\r\n        : <form onSubmit={startCharging}>\r\n          <div>\r\n            Enter the Identifier\r\n      </div>\r\n          <div> {props.noChargerNotification}</div>\r\n          <input type=\"text\" name=\"identifier\" />\r\n          <button type='submit' className={styles.buttonGreen}> Start charging</button>\r\n        </form>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from './Main.module.css';\r\nimport StationInfo from './StationInfo';\r\nimport BriefStationInfo from './BriefStationInfo';\r\nimport Charging from './Charging'\r\n\r\nexport default function MainPage(props) {\r\n  function updateSearchFilter(event) {\r\n    props.onSearchFilterUpdate(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.gridForMenu}>\r\n      <div className={styles.post1}>\r\n        <img className={styles.logo} alt=\"logo\" src={`images/logo.png`}></img>\r\n        <br></br>\r\n        {(props.isLoggedIn !== true) ?\r\n          <div>\r\n            <div> {props.message}</div>\r\n            <Link to=\"/login\">\r\n              <button className={styles.buttonGreen}> Login </button>\r\n            </Link>\r\n            <Link to=\"/registration\">\r\n              <button className={styles.buttonGreen}>Registration</button>\r\n            </Link>\r\n          </div>\r\n          :\r\n          <div>\r\n            <Link to=\"/profile\">\r\n              <button className={styles.buttonGreen}>Profile</button>\r\n            </Link>\r\n            <button className={styles.buttonBlue} onClick={props.logout}>Logout</button>\r\n          </div>\r\n        }\r\n\r\n      </div>\r\n      <div id=\"mainInfo\" className={styles.post2}>\r\n        <div id=\"infoAboutStation\">\r\n          <h3> Choose station on the map/list or search</h3>\r\n          <input type=\"search\" placeholder=\"Search \" onChange={updateSearchFilter} /> <br></br>\r\n          {(props.currentMarker.stationName) ?\r\n            <StationInfo {...props.currentMarker} setCurrentStationToNull={props.setCurrentStationToNull} isLoggedIn={props.isLoggedIn} />\r\n            : (props.resultArray.length === 0) ? \" No results\" : props.resultArray.map((item, i) => (\r\n              <BriefStationInfo key={i} setStation={props.setStation} setCurrentStationToNull={props.setCurrentStationToNull} info={item} />\r\n            ))}\r\n        </div>\r\n\r\n        <br></br>\r\n\r\n      </div>\r\n\r\n      <div className={styles.post3}>\r\n        {(props.isLoggedIn)\r\n          ? <Charging\r\n            startCharging={props.startCharging}\r\n            noChargerNotification={props.noChargerNotification}\r\n            isCharging={props.isCharging}\r\n            idCharging={props.idCharging}\r\n            UUID={props.UUID}\r\n            currentCharge={props.currentCharge}\r\n            stopCharging={props.stopCharging}\r\n          />\r\n          : \"You can start charging when you are logged in\"}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport styles from './Main.module.css';\r\n\r\nexport default function Login(props) {\r\n  function login(event) {\r\n    event.preventDefault();\r\n    props.login(\r\n      event.target['name'].value,\r\n      event.target['password'].value,\r\n    );\r\n    props.history.goBack();\r\n  }\r\n\r\n  function cancel(event) {\r\n    event.preventDefault();\r\n    props.history.goBack();\r\n  }\r\n\r\n  return (\r\n    // eslint-disable-next-line \r\n    <div className={styles.generalGrid, styles.registration}>\r\n      <h2> Login </h2>\r\n      <form onSubmit={login}>\r\n        <div>\r\n          Nickname\r\n        </div>\r\n        <input type=\"text\" name=\"name\" />\r\n        <div>\r\n          Password\r\n        </div>\r\n        <input type=\"password\" name=\"password\" />\r\n        <button className={styles.cancelButton} onClick={cancel}>Cancel</button>\r\n        <button className={styles.proceedButton} type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styles from './Main.module.css';\r\n\r\nexport default function Register(props) {\r\n\r\n  function register(event) {\r\n    event.preventDefault();\r\n    if (event.target['password'].value !== event.target['password1'].value) {\r\n    } else {\r\n      props.register(\r\n        event.target['username'].value,\r\n        event.target['email'].value,\r\n        event.target['password'].value,\r\n      );\r\n      if (props.message === \"Created\")\r\n        props.history.goBack();\r\n    }\r\n  }\r\n\r\n  function cancel(event) {\r\n    event.preventDefault();\r\n    props.history.goBack();\r\n    props.setMessageToNull();\r\n  }\r\n\r\n  return (\r\n    // eslint-disable-next-line \r\n    <div className={styles.generalGrid, styles.registration}>\r\n      <form onSubmit={register}>\r\n        <h2>Registration</h2>\r\n        <div>\r\n          Username\r\n        </div>\r\n        <input type=\"text\" name=\"username\" />\r\n        <div>\r\n          Email\r\n        </div>\r\n        <input type=\"text\" name=\"email\" />\r\n        <div>\r\n          Password\r\n        </div>\r\n        <input type=\"password\" name=\"password\" />\r\n        <div>\r\n          Password\r\n        </div>\r\n        <input type=\"password\" name=\"password1\" />\r\n        <br></br>\r\n        <button className={styles.cancelButton} onClick={cancel}>Back</button>\r\n        <button className={styles.proceedButton} type=\"submit\">Register</button>\r\n        <div id=\"message\" > {(props.message === \"Incorrect username or password\") ? \"\" : props.message} </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function HistoryRow(props) {\r\n    return (\r\n        <tr>\r\n            <th>{props.UUID}</th>\r\n            <th>{props.timeOfStart.substr(0, 9)}</th>\r\n            <th> {props.energy}</th>\r\n            <th>{props.timeOfUsage} </th>\r\n            <th>{props.cost} </th>\r\n            {/* {console.log(props)} */}\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styles from './Main.module.css';\r\nimport HistoryRow from './HistoryRow'\r\nexport default function Profile(props) {\r\n\r\n  function cancel(event) {\r\n    event.preventDefault();\r\n    props.history.goBack();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {(props.userHistory.length !== 0) ?\r\n        <table>\r\n          <tr>\r\n            <th>Station Number</th>\r\n            <th>Date</th>\r\n            <th>Energy(kWt)</th>\r\n            <th>Time of usage(min)</th>\r\n            <th>Cost(EUR)</th>\r\n          </tr>\r\n          <tbody>\r\n            {props.userHistory.map((item, i) => (\r\n              <HistoryRow key={i} {...item} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        : \" You have no charges\"\r\n      }\r\n      <button className={styles.cancelButton} onClick={cancel}>Back</button>\r\n      <div id=\"message\" className={styles.hidden}> {props.message} </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport GoogleMapReact from 'google-map-react';\r\nimport Marker from './components/Marker';\r\nimport axios from 'axios';\r\nimport styles from './components/Main.module.css';\r\nimport MainPage from './components/MainPage';\r\nimport Login from './components/Login';\r\nimport Registration from './components/Registration';\r\nimport StationInfo from './components/StationInfo';\r\nimport Profile from './components/Profile';\r\n// const API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userHistory: [],\r\n      message: '',\r\n      isLoggedIn: false,\r\n      idUser: null,\r\n      username: '',\r\n      password: '',\r\n      data: [],\r\n      currentMarker: {},\r\n      center: {\r\n        lat: 65.01,\r\n        lng: 25.49\r\n      },\r\n      zoom: 13,\r\n      Markers: [],\r\n      arr: [],\r\n      showSearchResults: false,\r\n      isCharging: false,\r\n      UUID: \"\",\r\n      idCharging: \"\",\r\n      noChargerNotification: \"\",\r\n      currentCharge: {},\r\n    }\r\n  };\r\n  \r\n  componentDidMount = () => {\r\n    axios.get('http://ec2-3-92-231-143.compute-1.amazonaws.com:4000/getData').then(result => {\r\n      this.setState({ Markers: result.data })\r\n      this.setState({ arr: result.data })\r\n    })\r\n      .catch(error => {\r\n        console.error(error);\r\n      })\r\n  }\r\n\r\n  logout = () => {\r\n    this.stopCharging();\r\n    this.setState({\r\n      isLoggedIn: false,\r\n      username: \"\",\r\n      password: \"\",\r\n      idUser: null,\r\n      UUID: \"\"\r\n    })\r\n  }\r\n\r\n  login = (username, password) => {\r\n    axios.get('http://ec2-3-92-231-143.compute-1.amazonaws.com:4000/signIn', {\r\n      auth: {\r\n        username: username,\r\n        password: password\r\n      },\r\n    })\r\n      .then(\r\n        response => {\r\n          this.setState({\r\n            isLoggedIn: response.data,\r\n            username: username,\r\n            password: password\r\n          })\r\n          axios.get(`http://ec2-3-92-231-143.compute-1.amazonaws.com:4000/getUserId/${username}`, {\r\n            auth: {\r\n              username: username,\r\n              password: password\r\n            },\r\n          })\r\n            .then(response => {\r\n              this.setState({ idUser: response.data[0].idUser })\r\n              this.getUserHistory();\r\n            })\r\n            .catch(err => {\r\n              console.log(err)\r\n\r\n            })\r\n\r\n        })\r\n      .catch(error => {\r\n        this.setState({\r\n          message: \"Incorrect username or password\"\r\n        })\r\n      });\r\n  }\r\n\r\n  register = (username, email, password) => {\r\n    console.log(email, password, username)\r\n    axios.post('http://ec2-3-92-231-143.compute-1.amazonaws.com:4000/signUp', {\r\n      username: username,\r\n      email: email,\r\n      password: password\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ message: response.data })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  setMessageToNull = () => this.setState({ message: \"\" })\r\n  textInputChange = (value) => {\r\n    this.setState({ arr: this.state.Markers.filter(({ stationName }) => stationName.toLowerCase().indexOf(value.toLowerCase()) >= 0) });\r\n    // this.setState({ arr : this.state.arr.length = 5})\r\n    this.setState({ currentMarker: {} })\r\n    // ( this.state.arr.length != 0) ? this.setState( {showSearchResults: true}) : this.setState( {showSearchResults: false})\r\n  }\r\n\r\n  setCurrentStation = (currentStation) => {\r\n    this.setState({\r\n      currentMarker: currentStation,\r\n      center: {\r\n        lat: currentStation.lat,\r\n        lng: currentStation.lng\r\n      },\r\n      zoom: 16\r\n    })\r\n  }\r\n\r\n  setCurrentStationToNull = () => {\r\n    this.setState({ currentMarker: {} })\r\n  }\r\n\r\n  refreshData = () => {\r\n    let frequency = 60;\r\n    axios.get(`http://ec2-3-92-231-143.compute-1.amazonaws.com:4000/chargingProcess/${this.state.idCharging}`, {\r\n      auth: {\r\n        username: this.state.username,\r\n        password: this.state.password,\r\n      },\r\n    }).then(response => {\r\n      // console.log(response.data)\r\n      this.setState({ currentCharge: { ...response.data[0] } })\r\n    })\r\n      .catch()\r\n    this.getUserHistory();\r\n    if (this.state.isCharging) {\r\n      setTimeout(this.refreshData, frequency * 1000);\r\n    }\r\n  }\r\n\r\n  getUserHistory = () => {\r\n    axios.get(`http://ec2-3-92-231-143.compute-1.amazonaws.com:4000/history/${this.state.idUser}`, {\r\n      auth: {\r\n        username: this.state.username,\r\n        password: this.state.password,\r\n      },\r\n    })\r\n      .then(response => this.setState({ userHistory: response.data }))\r\n      .catch(error => console.log(error))\r\n\r\n  }\r\n\r\n  stopCharging = () => {\r\n    this.setState({ isCharging: false })\r\n    axios.get(`http://ec2-3-92-231-143.compute-1.amazonaws.com:4000/stopCharging/${this.state.idCharging}`, {\r\n      auth: {\r\n        username: this.state.username,\r\n        password: this.state.password,\r\n      },\r\n    })\r\n      .then(response => {\r\n        this.componentDidMount();\r\n      })\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  startCharging = (UUID) => {\r\n    if (UUID === \"\") {\r\n      UUID = 0\r\n    }\r\n    axios.get(`http://ec2-3-92-231-143.compute-1.amazonaws.com:4000/startCharging/${UUID}`, {\r\n      auth: {\r\n        username: this.state.username,\r\n        password: this.state.password,\r\n      },\r\n    })\r\n      .then(\r\n        response => {\r\n          if (response.data !== false) {\r\n            this.setState(\r\n              {\r\n                isCharging: true,\r\n                UUID: UUID,\r\n                idCharging: response.data.id,\r\n                noChargerNotification: \"\"\r\n              }\r\n            )\r\n            this.refreshData();\r\n            this.componentDidMount();\r\n          } else {\r\n            this.setState({\r\n              noChargerNotification: \"No charger with such ID or it's taken already\"\r\n            })\r\n          }\r\n        })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  _onChildClick = (key, childProps) => {\r\n    let marker\r\n    this.state.Markers.forEach(e => {\r\n      if (e.stationName === childProps.text) {\r\n        marker = e\r\n      }\r\n      // console.log(this.state.userHistory);\r\n    });\r\n    this.setState({\r\n      center: {\r\n        lat: childProps.lat,\r\n        lng: childProps.lng\r\n      },\r\n      zoom: 16,\r\n      currentMarker: marker,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.generalGrid}>\r\n        <main>\r\n          <Router>\r\n            <Route path=\"/station/:id\" exact render={routeProps => <StationInfo {...routeProps} getInfoAboutStation={this.getInfoAboutStation} />} />\r\n            <Route path=\"/login\" exact render={\r\n              (routeProps) =>\r\n                <Login\r\n                  login={this.login}\r\n                  {...routeProps}\r\n                  username={this.state.username}\r\n                  message={this.state.message}\r\n                  setMessageToNull={this.setMessageToNull}\r\n                />}\r\n            />\r\n            <Route path=\"/profile\" exact render={routeProps => <Profile userHistory={this.state.userHistory} {...routeProps} />} />\r\n            <Route path=\"/registration\" exact render={routeProps =>\r\n              <Registration\r\n                {...routeProps}\r\n                register={this.register}\r\n                message={this.state.message}\r\n                setMessageToNull={this.setMessageToNull}\r\n              />} />\r\n            <Route path=\"/\" exact render={\r\n              (routeProps) =>\r\n                <MainPage\r\n                  logout={this.logout}\r\n                  message={this.state.message}\r\n                  currentMarker={this.state.currentMarker}\r\n                  isLoggedIn={this.state.isLoggedIn}\r\n                  onSearchFilterUpdate={this.textInputChange}\r\n                  showSearchResults={this.state.showSearchResults}\r\n                  resultArray={this.state.arr.slice(0, 7)}\r\n                  setStation={this.setCurrentStation}\r\n                  setCurrentStationToNull={this.setCurrentStationToNull}\r\n                  startCharging={this.startCharging}\r\n                  noChargerNotification={this.state.noChargerNotification}\r\n                  isCharging={this.state.isCharging}\r\n                  UUID={this.state.UUID}\r\n                  idCharging={this.state.idCharging}\r\n                  currentCharge={this.state.currentCharge}\r\n                  stopCharging={this.stopCharging}\r\n                />\r\n            } />\r\n          </Router>\r\n        </main>\r\n\r\n        <div className = {styles.map}>\r\n          <GoogleMapReact\r\n            center={this.state.center}\r\n            bootstrapURLKeys={{ key: \"AIzaSyBQc4fDzvIrxXU2Md73EjyY6oXWspFCMSY\" }}\r\n            zoom={this.state.zoom}\r\n            onChildClick={this._onChildClick}\r\n          >\r\n            {\r\n              this.state.Markers.map((item, i) => (\r\n                <Marker key={i} lat={item.lat} lng={item.lng} isTaken={item.isTaken} type={item.type} text={item.stationName} />\r\n              ))\r\n            }\r\n          </GoogleMapReact>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}