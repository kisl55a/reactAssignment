{"version":3,"sources":["components/Main.module.css","components/Marker.js","components/StationInfo.js","components/BriefStationInfo.js","components/Charging.js","components/MainPage.js","components/Login.js","components/Registration.js","components/HistoryRow.js","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Marker","props","type","toLowerCase","isTaken","className","styles","station","alt","src","stationTaken","StationInfo","stationInfo","infoHeader","stationName","address","power","price","measure","isLoggedIn","UUID","cancelButtonMainPage","onClick","setCurrentStationToNull","setCurrentStation","setStation","info","zebra","searchRes","searchResTaken","Charging","isCharging","chargingInfo","toUpperCase","currentCharge","cost","timeOfUsage","energy","stopCharging","onSubmit","event","preventDefault","startCharging","target","value","noChargerNotification","name","buttonGreen","MainPage","gridForMenu","post1","logo","message","to","buttonBlue","logout","id","post2","placeholder","onChange","onSearchFilterUpdate","currentMarker","resultArray","length","map","item","i","BriefStationInfo","key","post3","idCharging","Login","generalGrid","registration","login","history","goBack","cancelButton","proceedButton","Register","register","setMessageToNull","HistoryRow","timeOfStart","substr","Profile","userHistory","hidden","App","componentDidMount","axios","get","then","result","setState","Markers","data","arr","catch","error","console","username","password","idUser","auth","response","getUserHistory","err","log","email","post","textInputChange","state","filter","indexOf","currentStation","center","lat","lng","zoom","refreshData","setTimeout","frequency","_onChildClick","childProps","marker","forEach","e","text","showSearchResults","path","exact","render","routeProps","getInfoAboutStation","slice","this","bootstrapURLKeys","onChildClick","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.3b785517.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"Main_map__2A5Ok\",\"mainInfo\":\"Main_mainInfo__HfHzs\",\"generalGrid\":\"Main_generalGrid__2Aljb\",\"registration\":\"Main_registration__9PmD5\",\"gridForMenu\":\"Main_gridForMenu__t4NZs\",\"post-1\":\"Main_post-1__20N_-\",\"post-2\":\"Main_post-2__1L0in\",\"post-3\":\"Main_post-3__1aiSU\",\"da\":\"Main_da__192AR\",\"searchRes\":\"Main_searchRes__uCSW3\",\"searchResTaken\":\"Main_searchResTaken___mryC\",\"station\":\"Main_station__Eh8No\",\"stationTaken\":\"Main_stationTaken__3w6ty\",\"logo\":\"Main_logo__Nqnmz\",\"buttonGreen\":\"Main_buttonGreen__2t2go\",\"buttonBlue\":\"Main_buttonBlue__2ejNs\",\"proceedButton\":\"Main_proceedButton__3c4Vx\",\"cancelButton\":\"Main_cancelButton__25PgW\",\"cancelButtonMainPage\":\"Main_cancelButtonMainPage__doyqb\",\"zebra\":\"Main_zebra__Yj0hC\",\"infoHeader\":\"Main_infoHeader__28sSP\",\"stationInfo\":\"Main_stationInfo__SiEFV\",\"property\":\"Main_property__Mtkn0\",\"chargingInfo\":\"Main_chargingInfo__3CoSJ\"};","import React from 'react';\n\nimport styles from './Main.module.css';\n\nexport default function Marker(props) {\n    return (\n        <div>\n            {/* {console.log(props)} */}\n            {\n                (props.type.toLowerCase() === \"fast\") ?\n                    (props.isTaken === 0 ? <img className={styles.station} alt=\"fastCharge\" src={'/images/Charging.png'}></img> :\n                        <img className={styles.stationTaken} alt=\"fastCharge\" src={`/images/Charging.png`}></img>\n                    )\n                    :\n                    (props.isTaken === 0 ? <img className={styles.station} alt=\"slowCharge\" src={`/images/slow.png`}></img> :\n                        <img className={styles.stationTaken} alt=\"slowCharge\" src={`/images/slow.png`}></img>)\n            }\n        </div>\n)}\n\n","import React from 'react';\nimport styles from './Main.module.css';\n\n// import { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\nconst StationInfo = (props) => {\n    function back() {\n        props.setCurrentStationToNull();\n    }\n    return (<div className={styles.stationInfo}>\n\n        <h4 className={styles.infoHeader}>\n            {props.stationName}\n        </h4>\n\n        <div>\n            Status: {(props.isTaken === 1) ? \"Taken\" : \" Free\"}\n        </div>\n        <div>\n            Address: {props.address}\n        </div>\n\n        <div>\n            Type: {props.type}\n        </div>\n        <div>\n            Power: {props.power} <sup>kWh</sup>\n        </div>\n        <div>\n            Price: {props.price}<sup>{props.measure}</sup>\n        </div>\n        {\n            (props.isLoggedIn) ?\n            <div>  Identifier: {props.UUID}</div> :\n            <div></div>\n        }\n        <div> <button className={styles.cancelButtonMainPage} onClick={back}> Back </button></div>\n    </div>)\n\n}\n\nexport default StationInfo;","import React from 'react';\nimport styles from './Main.module.css';\n\nconst StationInfo = (props) => {\n\n    function setCurrentStation() {\n        props.setStation(props.info)\n    }\n\n    if (props.info.isTaken !== 1) {\n        return (<div className={styles.zebra}>\n\n            <div className={styles.searchRes} onClick={setCurrentStation}>\n                {props.info.stationName}\n            </div>\n        </div>)\n    } else {\n        return (<div className={styles.zebra}>\n            \n            <div className={styles.searchResTaken} onClick={setCurrentStation}>\n                {props.info.stationName}\n            </div>\n        </div>)\n    }\n\n\n}\n\nexport default StationInfo;","import React from 'react'\nimport styles from './Main.module.css';\n\nexport default function Charging(props) {\n  function startCharging(event) {\n    event.preventDefault();\n    props.startCharging(\n      event.target['identifier'].value,\n    );\n  }\n\n  return (\n    <div>\n      {(props.isCharging)\n        ?\n        <div className={styles.chargingInfo}>\n          <h5 className={styles.infoHeader}> Station UUID:\n         {props.UUID.toUpperCase()} </h5>\n          <div>The price:\n        {props.currentCharge.cost} <sup>EUR</sup> </div>\n          <div> Your time:\n        {props.currentCharge.timeOfUsage} <sup>min</sup> </div>\n          Your energy:\n        {props.currentCharge.energy} <sup>kWh</sup>\n          <br></br>\n          <button className={styles.cancelButtonMainPage} onClick={props.stopCharging}> Stop charging</button>\n        </div>\n        : <form onSubmit={startCharging}>\n          <div>\n            Enter the Identifier\n      </div>\n          <div> {props.noChargerNotification}</div>\n          <input type=\"text\" name=\"identifier\" />\n          <button type='submit' className={styles.buttonGreen}> Start charging</button>\n        </form>\n      }\n    </div>\n  )\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport styles from './Main.module.css';\nimport StationInfo from './StationInfo';\nimport BriefStationInfo from './BriefStationInfo';\nimport Charging from './Charging'\n\nexport default function MainPage(props) {\n  function updateSearchFilter(event) {\n    props.onSearchFilterUpdate(event.target.value)\n  }\n\n  return (\n    <div className={styles.gridForMenu}>\n      <div className={styles.post1}>\n        <img className={styles.logo} alt=\"logo\" src={`images/logo.png`}></img>\n        <br></br>\n        {(props.isLoggedIn !== true) ?\n          <div>\n            <div> {props.message}</div>\n            <Link to=\"/login\">\n              <button className={styles.buttonGreen}> Login </button>\n            </Link>\n            <Link to=\"/registration\">\n              <button className={styles.buttonGreen}>Registration</button>\n            </Link>\n          </div>\n          :\n          <div>\n            <Link to=\"/profile\">\n              <button className={styles.buttonGreen}>Profile</button>\n            </Link>\n            <button className={styles.buttonBlue} onClick={props.logout}>Logout</button>\n          </div>\n        }\n\n      </div>\n      <div id=\"mainInfo\" className={styles.post2}>\n        <div id=\"infoAboutStation\">\n          <h3> Choose station on the map/list or search</h3>\n          <input type=\"search\" placeholder=\"Search \" onChange={updateSearchFilter} /> <br></br>\n          {(props.currentMarker.stationName) ?\n            <StationInfo {...props.currentMarker} setCurrentStationToNull={props.setCurrentStationToNull} isLoggedIn={props.isLoggedIn} />\n            : (props.resultArray.length === 0) ? \" No results\" : props.resultArray.map((item, i) => (\n              <BriefStationInfo key={i} setStation={props.setStation} setCurrentStationToNull={props.setCurrentStationToNull} info={item} />\n            ))}\n        </div>\n\n        <br></br>\n\n      </div>\n\n      <div className={styles.post3}>\n        {(props.isLoggedIn)\n          ? <Charging\n            startCharging={props.startCharging}\n            noChargerNotification={props.noChargerNotification}\n            isCharging={props.isCharging}\n            idCharging={props.idCharging}\n            UUID={props.UUID}\n            currentCharge={props.currentCharge}\n            stopCharging={props.stopCharging}\n          />\n          : \"You can start charging when you are logged in\"}\n      </div>\n    </div>\n  )\n}","import React from 'react'\nimport styles from './Main.module.css';\n\nexport default function Login(props) {\n  function login(event) {\n    event.preventDefault();\n    props.login(\n      event.target['name'].value,\n      event.target['password'].value,\n    );\n    props.history.goBack();\n  }\n\n  function cancel(event) {\n    event.preventDefault();\n    props.history.goBack();\n  }\n\n  return (\n    // eslint-disable-next-line \n    <div className={styles.generalGrid, styles.registration}>\n      <h2> Login </h2>\n      <form onSubmit={login}>\n        <div>\n          Nickname\n        </div>\n        <input type=\"text\" name=\"name\" />\n        <div>\n          Password\n        </div>\n        <input type=\"password\" name=\"password\" />\n        <button className={styles.cancelButton} onClick={cancel}>Cancel</button>\n        <button className={styles.proceedButton} type=\"submit\">Login</button>\n      </form>\n    </div>\n  )\n}\n","import React from 'react'\nimport styles from './Main.module.css';\n\nexport default function Register(props) {\n\n  function register(event) {\n    event.preventDefault();\n    if (event.target['password'].value !== event.target['password1'].value) {\n    } else {\n      props.register(\n        event.target['username'].value,\n        event.target['email'].value,\n        event.target['password'].value,\n      );\n      if (props.message === \"Created\")\n        props.history.goBack();\n    }\n  }\n\n  function cancel(event) {\n    event.preventDefault();\n    props.history.goBack();\n    props.setMessageToNull();\n  }\n\n  return (\n    // eslint-disable-next-line \n    <div className={styles.generalGrid, styles.registration}>\n      <form onSubmit={register}>\n        <h2>Registration</h2>\n        <div>\n          Username\n        </div>\n        <input type=\"text\" name=\"username\" />\n        <div>\n          Email\n        </div>\n        <input type=\"text\" name=\"email\" />\n        <div>\n          Password\n        </div>\n        <input type=\"password\" name=\"password\" />\n        <div>\n          Password\n        </div>\n        <input type=\"password\" name=\"password1\" />\n        <br></br>\n        <button className={styles.cancelButton} onClick={cancel}>Back</button>\n        <button className={styles.proceedButton} type=\"submit\">Register</button>\n        <div id=\"message\" > {(props.message === \"Incorrect username or password\") ? \"\" : props.message} </div>\n      </form>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default function HistoryRow(props) {\n    return (\n        <tr>\n            <th>{props.UUID}</th>\n            <th>{props.timeOfStart.substr(0, 9)}</th>\n            <th> {props.energy}</th>\n            <th>{props.timeOfUsage} </th>\n            <th>{props.cost} </th>\n            {/* {console.log(props)} */}\n        </tr>\n    )\n}\n","import React from 'react'\nimport styles from './Main.module.css';\nimport HistoryRow from './HistoryRow'\nexport default function Profile(props) {\n\n  function cancel(event) {\n    event.preventDefault();\n    props.history.goBack();\n  }\n\n  return (\n    <div>\n      {(props.userHistory.length !== 0) ?\n        <table>\n          <tr>\n            <th>Station Number</th>\n            <th>Date</th>\n            <th>Energy(kWt)</th>\n            <th>Time of usage(min)</th>\n            <th>Cost(EUR)</th>\n          </tr>\n          <tbody>\n            {props.userHistory.map((item, i) => (\n              <HistoryRow key={i} {...item} />\n            ))}\n          </tbody>\n        </table>\n        : \" You have no charges\"\n      }\n      <button className={styles.cancelButton} onClick={cancel}>Back</button>\n      <div id=\"message\" className={styles.hidden}> {props.message} </div>\n\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport GoogleMapReact from 'google-map-react';\nimport Marker from './components/Marker';\nimport axios from 'axios';\nimport styles from './components/Main.module.css';\nimport MainPage from './components/MainPage';\nimport Login from './components/Login';\nimport Registration from './components/Registration';\nimport StationInfo from './components/StationInfo';\nimport Profile from './components/Profile';\n// const API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userHistory: [],\n      message: '',\n      isLoggedIn: false,\n      idUser: null,\n      username: '',\n      password: '',\n      data: [],\n      currentMarker: {},\n      center: {\n        lat: 65.01,\n        lng: 25.49\n      },\n      zoom: 13,\n      Markers: [],\n      arr: [],\n      showSearchResults: false,\n      isCharging: false,\n      UUID: \"\",\n      idCharging: \"\",\n      noChargerNotification: \"\",\n      currentCharge: {},\n    }\n  };\n  \n  componentDidMount = () => {\n    axios.get('https://sleepy-everglades-43480.herokuapp.com/getData').then(result => {\n      this.setState({ Markers: result.data })\n      this.setState({ arr: result.data })\n    })\n      .catch(error => {\n        console.error(error);\n      })\n  }\n\n  logout = () => {\n    this.stopCharging();\n    this.setState({\n      isLoggedIn: false,\n      username: \"\",\n      password: \"\",\n      idUser: null,\n      UUID: \"\"\n    })\n  }\n\n  login = (username, password) => {\n    axios.get('https://sleepy-everglades-43480.herokuapp.com/signIn', {\n      auth: {\n        username: username,\n        password: password\n      },\n    })\n      .then(\n        response => {\n          this.setState({\n            isLoggedIn: response.data,\n            username: username,\n            password: password\n          })\n          axios.get(`https://sleepy-everglades-43480.herokuapp.com/getUserId/${username}`, {\n            auth: {\n              username: username,\n              password: password\n            },\n          })\n            .then(response => {\n              this.setState({ idUser: response.data[0].idUser })\n              this.getUserHistory();\n            })\n            .catch(err => {\n              console.log(err)\n\n            })\n\n        })\n      .catch(error => {\n        this.setState({\n          message: \"Incorrect username or password\"\n        })\n      });\n  }\n\n  register = (username, email, password) => {\n    console.log(email, password, username)\n    axios.post('https://sleepy-everglades-43480.herokuapp.com/signUp', {\n      username: username,\n      email: email,\n      password: password\n    })\n      .then((response) => {\n        console.log(response);\n        this.setState({ message: response.data })\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  setMessageToNull = () => this.setState({ message: \"\" })\n  textInputChange = (value) => {\n    this.setState({ arr: this.state.Markers.filter(({ stationName }) => stationName.toLowerCase().indexOf(value.toLowerCase()) >= 0) });\n    // this.setState({ arr : this.state.arr.length = 5})\n    this.setState({ currentMarker: {} })\n    // ( this.state.arr.length != 0) ? this.setState( {showSearchResults: true}) : this.setState( {showSearchResults: false})\n  }\n\n  setCurrentStation = (currentStation) => {\n    this.setState({\n      currentMarker: currentStation,\n      center: {\n        lat: currentStation.lat,\n        lng: currentStation.lng\n      },\n      zoom: 16\n    })\n  }\n\n  setCurrentStationToNull = () => {\n    this.setState({ currentMarker: {} })\n  }\n\n  refreshData = () => {\n    let frequency = 60;\n    axios.get(`https://sleepy-everglades-43480.herokuapp.com/chargingProcess/${this.state.idCharging}`, {\n      auth: {\n        username: this.state.username,\n        password: this.state.password,\n      },\n    }).then(response => {\n      // console.log(response.data)\n      this.setState({ currentCharge: { ...response.data[0] } })\n    })\n      .catch()\n    this.getUserHistory();\n    if (this.state.isCharging) {\n      setTimeout(this.refreshData, frequency * 1000);\n    }\n  }\n\n  getUserHistory = () => {\n    axios.get(`https://sleepy-everglades-43480.herokuapp.com/history/${this.state.idUser}`, {\n      auth: {\n        username: this.state.username,\n        password: this.state.password,\n      },\n    })\n      .then(response => this.setState({ userHistory: response.data }))\n      .catch(error => console.log(error))\n\n  }\n\n  stopCharging = () => {\n    this.setState({ isCharging: false })\n    axios.get(`https://sleepy-everglades-43480.herokuapp.com/stopCharging/${this.state.idCharging}`, {\n      auth: {\n        username: this.state.username,\n        password: this.state.password,\n      },\n    })\n      .then(response => {\n        this.componentDidMount();\n      })\n      .catch(error => console.log(error))\n  }\n\n  startCharging = (UUID) => {\n    if (UUID === \"\") {\n      UUID = 0\n    }\n    axios.get(`https://sleepy-everglades-43480.herokuapp.com/startCharging/${UUID}`, {\n      auth: {\n        username: this.state.username,\n        password: this.state.password,\n      },\n    })\n      .then(\n        response => {\n          if (response.data !== false) {\n            this.setState(\n              {\n                isCharging: true,\n                UUID: UUID,\n                idCharging: response.data.id,\n                noChargerNotification: \"\"\n              }\n            )\n            this.refreshData();\n            this.componentDidMount();\n          } else {\n            this.setState({\n              noChargerNotification: \"No charger with such ID or it's taken already\"\n            })\n          }\n        })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  _onChildClick = (key, childProps) => {\n    let marker\n    this.state.Markers.forEach(e => {\n      if (e.stationName === childProps.text) {\n        marker = e\n      }\n      // console.log(this.state.userHistory);\n    });\n    this.setState({\n      center: {\n        lat: childProps.lat,\n        lng: childProps.lng\n      },\n      zoom: 16,\n      currentMarker: marker,\n    })\n  }\n\n  render() {\n    return (\n      <div className={styles.generalGrid}>\n        <main>\n          <Router>\n            <Route path=\"/station/:id\" exact render={routeProps => <StationInfo {...routeProps} getInfoAboutStation={this.getInfoAboutStation} />} />\n            <Route path=\"/login\" exact render={\n              (routeProps) =>\n                <Login\n                  login={this.login}\n                  {...routeProps}\n                  username={this.state.username}\n                  message={this.state.message}\n                  setMessageToNull={this.setMessageToNull}\n                />}\n            />\n            <Route path=\"/profile\" exact render={routeProps => <Profile userHistory={this.state.userHistory} {...routeProps} />} />\n            <Route path=\"/registration\" exact render={routeProps =>\n              <Registration\n                {...routeProps}\n                register={this.register}\n                message={this.state.message}\n                setMessageToNull={this.setMessageToNull}\n              />} />\n            <Route path=\"/\" exact render={\n              (routeProps) =>\n                <MainPage\n                  logout={this.logout}\n                  message={this.state.message}\n                  currentMarker={this.state.currentMarker}\n                  isLoggedIn={this.state.isLoggedIn}\n                  onSearchFilterUpdate={this.textInputChange}\n                  showSearchResults={this.state.showSearchResults}\n                  resultArray={this.state.arr.slice(0, 7)}\n                  setStation={this.setCurrentStation}\n                  setCurrentStationToNull={this.setCurrentStationToNull}\n                  startCharging={this.startCharging}\n                  noChargerNotification={this.state.noChargerNotification}\n                  isCharging={this.state.isCharging}\n                  UUID={this.state.UUID}\n                  idCharging={this.state.idCharging}\n                  currentCharge={this.state.currentCharge}\n                  stopCharging={this.stopCharging}\n                />\n            } />\n          </Router>\n        </main>\n\n        <div className = {styles.map}>\n          <GoogleMapReact\n            center={this.state.center}\n            bootstrapURLKeys={{ key: \"AIzaSyBQc4fDzvIrxXU2Md73EjyY6oXWspFCMSY\" }}\n            zoom={this.state.zoom}\n            onChildClick={this._onChildClick}\n          >\n            {\n              this.state.Markers.map((item, i) => (\n                <Marker key={i} lat={item.lat} lng={item.lng} isTaken={item.isTaken} type={item.type} text={item.stationName} />\n              ))\n            }\n          </GoogleMapReact>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}